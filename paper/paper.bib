@article{baptista2021using,
  title = {Using {{Python}} and {{Google Colab}} to {{Teach Physical Chemistry During Pandemic}}},
  author = {Baptista, Leonardo},
  year = {2021},
  month = feb,
  doi = {10.26434/chemrxiv.13656665.v1},
  abstract = {The present manuscript intends to propose using the Google Colab platform to teach and solve physical chemistry problems using Python computational language. Seven Jupyter notebooks were written and made available for the students via Google Colab supplementary material of the physical chemistry course of the chemical engineering course of the Technological Faculty of the Rio de Janeiro State University. These notebooks include several problems extracted from the course bibliography and solved with the use of Python language. The scripts show how the students can perform linear and polynomial regressions, fit math models to given data, perform numerical integration and plot creation using Python and its standards libraries. The Colab platform was chosen because it is free to use, does not require the installation, setup, and configuration of Python packages and their libraries in the students' personal computers. It is a multiuser and collaborative environment, ideal for remote classes. The notebooks can be shared between instructor and students or between the students, which easy the communication and track of students' progress. Indeed, this resource can be useful even after the end of the pandemic. This manuscript describes the platform, its advantages, how it was applied in our physical chemistry course, and the students' feedback at the end of the term. All notebooks are available as Supplementary Material of the manuscript, translated from Portuguese to English since our course is entirely in Portuguese. I hope the material and experience shared in this manuscript can be helpful to chemistry instructors who intend to abroad their pedagogical methods to engage more students in the undergraduate courses.},
  langid = {english},
  file = {/Users/toni_brain/Zotero/storage/4EB6IWKA/Baptista - 2021 - Using Python and Google Colab to Teach Physical Ch.pdf;/Users/toni_brain/Zotero/storage/AG3XMG2R/60c7548e0f50dba5b9397d43.html}
}

@misc{employability,
  title = {Employability Skills},
  journal = {RSC Education},
  abstract = {Studying chemistry gives you skills that a wide range of sectors are looking for. Here are just a few examples.},
  howpublished = {https://edu.rsc.org/future-in-chemistry/career-options/employability-skills},
  langid = {english},
  file = {/Users/toni_brain/Zotero/storage/6HACBDY2/employability-skills.html}
}

@article{harris2020array,
  title = {Array Programming with {{NumPy}}},
  author = {Harris, Charles R. and Millman, K. Jarrod and {van der Walt}, St{\'e}fan J. and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J. and Kern, Robert and Picus, Matti and Hoyer, Stephan and {van Kerkwijk}, Marten H. and Brett, Matthew and Haldane, Allan and {del R{\'i}o}, Jaime Fern{\'a}ndez and Wiebe, Mark and Peterson, Pearu and {G{\'e}rard-Marchant}, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E.},
  year = {2020},
  month = sep,
  journal = {Nature},
  volume = {585},
  number = {7825},
  pages = {357--362},
  publisher = {{Nature Publishing Group}},
  issn = {1476-4687},
  doi = {10.1038/s41586-020-2649-2},
  abstract = {Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves1 and in the first imaging of a black hole2. Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
  copyright = {2020 The Author(s)},
  langid = {english},
  keywords = {Computational neuroscience,Computational science,Computer science,Software,Solar physics},
  file = {/Users/toni_brain/Zotero/storage/XYRIUK6X/Harris et al. - 2020 - Array programming with NumPy.pdf;/Users/toni_brain/Zotero/storage/RKANVL3P/s41586-020-2649-2.html}
}

@article{hill2019undergraduate,
  title = {Undergraduate Recognition of Curriculum-Related Skill Development and the Skills Employers Are Seeking},
  author = {Hill, Michelle A. and Overton, Tina L. and Thompson, Christopher D. and Kitson, Russell R. A. and Coppo, Paolo},
  year = {2019},
  month = jan,
  journal = {Chem. Educ. Res. Pract.},
  volume = {20},
  number = {1},
  pages = {68--84},
  publisher = {{The Royal Society of Chemistry}},
  issn = {1756-1108},
  doi = {10.1039/C8RP00105G},
  abstract = {Employers of chemistry graduates are seeking a range of transferable skills from prospective employees, and academics are increasingly seeking to build employability skill development opportunities into the undergraduate curriculum. However, research suggests that undergraduates do not recognise or value such skill development without prompting. This recognition is essential if graduates are to be able to articulate their skills in the employment process. This study involves research amongst almost 1000 undergraduates studying chemistry at two institutions, using open-ended questions to collect qualitative data. The extent to which students recognised course-related skills development and understood the skills that employers are looking for was investigated, as was their desire to develop additional skills. Similarities and differences in student views between institutions are discussed, as well as trends across year levels and by gender. Results indicate that undergraduates studying chemistry are most likely to value and recognise development of some key skills sought by employers (teamwork, communication, thinking/problem solving, organisation/time management and laboratory/practical skills), but are very unlikely to value or recognise others (numeracy, independent learning, commercial awareness, interpersonal, research, computer/IT, creativity/innovation, flexibility/adaptability and initiative). Opportunities to develop the latter skills and recognition of the value of doing so will require improved communication with students and/or provision of new experiences within the curriculum.},
  langid = {english},
  file = {/Users/toni_brain/Zotero/storage/SIWBFZZF/Hill et al. - 2019 - Undergraduate recognition of curriculum-related sk.pdf;/Users/toni_brain/Zotero/storage/MTLETLUZ/C8RP00105G.html}
}

@article{hunter2007matplotlib,
  title = {Matplotlib: {{A 2D Graphics Environment}}},
  shorttitle = {Matplotlib},
  author = {Hunter, John D.},
  year = {2007},
  month = may,
  journal = {Computing in Science \& Engineering},
  volume = {9},
  number = {3},
  pages = {90--95},
  issn = {1558-366X},
  doi = {10.1109/MCSE.2007.55},
  abstract = {Matplotlib is a 2D graphics package used for Python for application development, interactive scripting,and publication-quality image generation across user interfaces and operating systems},
  keywords = {application development,Computer languages,Equations,Graphical user interfaces,Graphics,Image generation,Interpolation,Operating systems,Packaging,Programming profession,Python,scientific programming,scripting languages,User interfaces},
  file = {/Users/toni_brain/Zotero/storage/UZXC387N/4160265.html}
}

@incollection{hutchison2021integrating,
  title = {Integrating {{Python}} into an {{Undergraduate Mathematics}} for {{Chemists Course}}},
  booktitle = {Teaching {{Programming}} across the {{Chemistry Curriculum}}},
  author = {Hutchison, Geoffrey R.},
  year = {2021},
  month = jul,
  series = {{{ACS Symposium Series}}},
  volume = {1387},
  pages = {123--134},
  publisher = {{American Chemical Society}},
  doi = {10.1021/bk-2021-1387.ch009},
  abstract = {Many upper-level undergraduate chemistry courses, particularly quantum chemistry, thermodynamics, kinetics, and statistical mechanics, benefit from mathematical concepts beyond standard calculus, including differential equations, linear algebra, probability, statistics, operators, complex numbers, multivariate integrals, and partial derivatives. Moreover, while mathematics courses often focus on abstract problems, physical sciences, and particularly physical chemistry, offer concrete applications often with complicated functions. A one-semester course in ``Mathematics for Chemists'' offers a tailored syllabus specifically to address common challenges in physical and analytical courses. By including basic Python programming, students can focus on core concepts, rather than worry about common calculation or mathematical mistakes. The course includes an introduction to core Python concepts, including numpy, scipy, matplotlib, and sympy. All Jupyter notebooks and course materials are available under a Creative Commons license from https://github.com/ghutchis/chem1000.},
  chapter = {9},
  isbn = {978-0-8412-9819-4}
}

@article{jupyter2019nbgrader,
  title = {Nbgrader: {{A Tool}} for {{Creating}} and {{Grading Assignments}} in the {{Jupyter Notebook}}},
  shorttitle = {Nbgrader},
  author = {{Jupyter Project} and Blank, Douglas and Bourgin, David and Brown, Alexander and Bussonnier, Matthias and Frederic, Jonathan and Granger, Brian and Griffiths, Thomas L. and Hamrick, Jessica and Kelley, Kyle and Pacer, M. and Page, Logan and P{\'e}rez, Fernando and {Ragan-Kelley}, Benjamin and Suchow, Jordan W. and Willing, Carol},
  year = {2019},
  month = jan,
  journal = {Journal of Open Source Education},
  volume = {2},
  number = {16},
  pages = {32},
  issn = {2577-3569},
  doi = {10.21105/jose.00032},
  abstract = {Jupyter et al., (2019). nbgrader: A Tool for Creating and Grading Assignments in the Jupyter Notebook. Journal of Open Source Education, 2(11), 32, https://doi.org/10.21105/jose.00032},
  langid = {english},
  file = {/Users/toni_brain/Zotero/storage/FC4R5HCX/Jupyter et al. - 2019 - nbgrader A Tool for Creating and Grading Assignme.pdf;/Users/toni_brain/Zotero/storage/KCA7M77I/jose.html}
}

@article{lafuente2021gentle,
  title = {A {{Gentle Introduction}} to {{Machine Learning}} for {{Chemists}}: {{An Undergraduate Workshop Using Python Notebooks}} for {{Visualization}}, {{Data Processing}}, {{Analysis}}, and {{Modeling}}},
  shorttitle = {A {{Gentle Introduction}} to {{Machine Learning}} for {{Chemists}}},
  author = {Lafuente, Deborah and Cohen, Brenda and Fiorini, Guillermo and Garc{\'i}a, Agust{\'i}n Alejo and Bringas, Mauro and Morzan, Ezequiel and Onna, Diego},
  year = {2021},
  month = sep,
  journal = {J. Chem. Educ.},
  volume = {98},
  number = {9},
  pages = {2892--2898},
  publisher = {{American Chemical Society}},
  issn = {0021-9584},
  doi = {10.1021/acs.jchemed.1c00142},
  abstract = {Machine learning, a subdomain of artificial intelligence, is a widespread technology that is molding how chemists interact with data. Therefore, it is a relevant skill to incorporate into the toolbox of any chemistry student. This work presents a workshop that introduces machine learning for chemistry students based on a set of Python notebooks and assignments. Python, one of the most popular programming languages, is open source, free to use, and has plenty of learning resources. The workshop is designed for students without previous experience in programming, and it aims for a deeper understanding of the complexity of concepts in programming and machine learning. The examples used correspond to real data from physicochemical characterizations of wine, a content that is of interest for students. The contents of the workshop are introduction to Python, basic statistics, data visualization, and dimension reduction, classification, and regression.},
  file = {/Users/toni_brain/Zotero/storage/LJJ6MK2S/Lafuente et al. - 2021 - A Gentle Introduction to Machine Learning for Chem.pdf;/Users/toni_brain/Zotero/storage/PNJQUFKS/acs.jchemed.html}
}

@article{menke2020series,
  title = {Series of {{Jupyter Notebooks Using Python}} for an {{Analytical Chemistry Course}}},
  author = {Menke, Erik J.},
  year = {2020},
  month = oct,
  journal = {J. Chem. Educ.},
  volume = {97},
  number = {10},
  pages = {3899--3903},
  publisher = {{American Chemical Society}},
  issn = {0021-9584},
  doi = {10.1021/acs.jchemed.9b01131},
  abstract = {UC Merced's upper-division analytical chemistry course has been modified to include a series of Jupyter notebooks intended to introduce chemistry students to the Python computer language. These Jupyter notebooks were designed to cover a wide variety of topics common to quantitative and instrumental analysis. Assuming no prior programming experience, the notebooks are scaffolded to introduce students the Python's syntax while applying Python to solving chemical problems. Jupyter and Python were chosen because they are free, widely available, and widely used.},
  file = {/Users/toni_brain/Zotero/storage/JWWDTSW8/Menke - 2020 - Series of Jupyter Notebooks Using Python for an An.pdf;/Users/toni_brain/Zotero/storage/9ATAYUC4/acs.jchemed.html}
}

@article{muller2022pcp,
  title = {{{PCP Notebooks}}: {{A Preparation Course}} for {{Python}} with a {{Focus}} on {{Signal Processing}}},
  shorttitle = {{{PCP Notebooks}}},
  author = {M{\"u}ller, Meinard and Rosenzweig, Sebastian},
  year = {2022},
  month = jan,
  journal = {Journal of Open Source Education},
  volume = {5},
  number = {47},
  pages = {148},
  issn = {2577-3569},
  doi = {10.21105/jose.00148},
  abstract = {M\"uller et al., (2022). PCP Notebooks: A Preparation Course for Python with a Focus on Signal Processing. Journal of Open Source Education, 5(47), 148, https://doi.org/10.21105/jose.00148},
  langid = {english},
  file = {/Users/toni_brain/Zotero/storage/RDFI2TUK/Müller and Rosenzweig - 2022 - PCP Notebooks A Preparation Course for Python wit.pdf;/Users/toni_brain/Zotero/storage/7R5NFNUX/jose.html}
}

@incollection{neiles2020professional,
  title = {Professional {{Skills}} in {{Chemistry}} and {{Biochemistry Curricula}}: {{A Call}} to {{Action}}},
  shorttitle = {Professional {{Skills}} in {{Chemistry}} and {{Biochemistry Curricula}}},
  booktitle = {Integrating {{Professional Skills}} into {{Undergraduate Chemistry Curricula}}},
  author = {Neiles, Kelly Y. and Mertz, Pamela S.},
  year = {2020},
  month = jan,
  series = {{{ACS Symposium Series}}},
  volume = {1365},
  pages = {3--15},
  publisher = {{American Chemical Society}},
  doi = {10.1021/bk-2020-1365.ch001},
  abstract = {For chemistry and biochemistry students to be successful in their future careers, they need high quality training not only in the technical skills of their STEM discipline but also many other non-technical skills important to being an effective scientist. In this chapter we define these non-technical skills as ``professional skills'' that include, but are not limited to, career skills (job searching, resume writing, networking, and having a professional mindset), scientific thinking (critical thinking, problem solving, and big picture thinking), scientific identity development, learning skills (self-regulated learning, initiative, study strategies, etc.), communication skills, and interpersonal skills such as teamwork and leadership development. Evidence from industry, government, and academia suggests that these professional skills are at least as, if not more important, than the STEM related technical skills in an undergraduate student's education. Though opportunities for professional development in these areas are available both through national scientific societies and at many institutions, problems with the current opportunities stem from the fact that, for various reasons, not all students engage with them. To address these problems, we recommend the development of instruction with three key features: professional skills are 1) integrated into the curriculum so that all students benefit; 2) scaffolded across courses whenever possible so that learning is intentionally connected and de-siloed; and 3) assessed using clearly articulated student learning outcomes. By creating professional skills curricula with these three features, chemistry and biochemistry programs will better prepare their students for the workforce and future careers.},
  chapter = {1},
  isbn = {978-0-8412-9866-8},
  file = {/Users/toni_brain/Zotero/storage/YRB9VQGH/Neiles and Mertz - 2020 - Professional Skills in Chemistry and Biochemistry .pdf;/Users/toni_brain/Zotero/storage/FZ3ITSRP/bk-2020-1365.html}
}

@book{tanemura2022python,
  title = {Python for {{Chemists}}},
  author = {Tanemura, Kiyoto Aramis and {Sierra-Costa}, Diego and Merz, Kenneth M.},
  year = {2022},
  month = aug,
  series = {{{ACS In Focus}}},
  publisher = {{American Chemical Society}},
  address = {{Washington, DC, USA}},
  doi = {10.1021/acsinfocus.7e5030},
  isbn = {978-0-8412-9925-2},
  langid = {english}
}

@software{team2022pandasdev,
  author       = {{The pandas development team}},
  title        = {pandas-dev/pandas: Pandas},
  month        = nov,
  year         = 2022,
  note         = {If you use this software, please cite it as below.},
  publisher    = {Zenodo},
  version      = {v1.5.2},
  doi          = {10.5281/zenodo.7344967},
  url          = {https://doi.org/10.5281/zenodo.7344967}
}

@article{virtanen2020scipy,
  title = {{{SciPy}} 1.0: Fundamental Algorithms for Scientific Computing in {{Python}}},
  shorttitle = {{{SciPy}} 1.0},
  author = {Virtanen, Pauli and Gommers, Ralf and Oliphant, Travis E. and Haberland, Matt and Reddy, Tyler and Cournapeau, David and Burovski, Evgeni and Peterson, Pearu and Weckesser, Warren and Bright, Jonathan and {van der Walt}, St{\'e}fan J. and Brett, Matthew and Wilson, Joshua and Millman, K. Jarrod and Mayorov, Nikolay and Nelson, Andrew R. J. and Jones, Eric and Kern, Robert and Larson, Eric and Carey, C. J. and Polat, {\.I}lhan and Feng, Yu and Moore, Eric W. and VanderPlas, Jake and Laxalde, Denis and Perktold, Josef and Cimrman, Robert and Henriksen, Ian and Quintero, E. A. and Harris, Charles R. and Archibald, Anne M. and Ribeiro, Ant{\^o}nio H. and Pedregosa, Fabian and {van Mulbregt}, Paul},
  year = {2020},
  month = mar,
  journal = {Nat Methods},
  volume = {17},
  number = {3},
  pages = {261--272},
  publisher = {{Nature Publishing Group}},
  issn = {1548-7105},
  doi = {10.1038/s41592-019-0686-2},
  abstract = {SciPy is an open-source scientific computing library for the Python programming language. Since its initial release in 2001, SciPy has become a de facto standard for leveraging scientific algorithms in Python, with over 600 unique code contributors, thousands of dependent packages, over 100,000 dependent repositories and millions of downloads per year. In this work, we provide an overview of the capabilities and development practices of SciPy 1.0 and highlight some recent technical developments.},
  copyright = {2020 The Author(s)},
  langid = {english},
  keywords = {Biophysical chemistry,Computational biology and bioinformatics,Technology},
  file = {/Users/toni_brain/Zotero/storage/PGJ45IH5/Virtanen et al. - 2020 - SciPy 1.0 fundamental algorithms for scientific c.pdf;/Users/toni_brain/Zotero/storage/AQIFNIU5/s41592-019-0686-2.html}
}

@article{white2022data,
  title = {Data {{Carpentry}} for {{Biologists}}: {{A}} Semester Long {{Data Carpentry}} Course Using Ecological and Other Biological Examples},
  shorttitle = {Data {{Carpentry}} for {{Biologists}}},
  author = {White, Ethan P. and Brym, Zachary T. and Marx, Andrew J. and Riemer, Kristina and Marconi, Sergio and Harris, David J. and Cruz, Virnaliz and Ernest, S. K. Morgan},
  year = {2022},
  month = apr,
  journal = {Journal of Open Source Education},
  volume = {5},
  number = {50},
  pages = {139},
  issn = {2577-3569},
  doi = {10.21105/jose.00139},
  abstract = {White et al., (2022). Data Carpentry for Biologists: A semester long Data Carpentry course using ecological and other biological examples. Journal of Open Source Education, 5(50), 139, https://doi.org/10.21105/jose.00139},
  langid = {english},
  file = {/Users/toni_brain/Zotero/storage/YGWBRF5W/White et al. - 2022 - Data Carpentry for Biologists A semester long Dat.pdf;/Users/toni_brain/Zotero/storage/LX3SWXF6/jose.html}
}
@misc{software-carpentry,
    author =       {Greg Wilson},
    title =        {Software Carpentry web site},
    howpublished = {http://software-carpentry.org},
    accessed =     {Feburary 2023},
    note =         {Main web site for Software Carpentry, replacing http://swc.scipy.org.}
}
@article{wilson-software-carpentry,
    author =  {Greg Wilson},
    title =   {Software Carpentry: Getting Scientists to Write Better Code by Making Them More Productive},
    journal = {Computing in Science \& Engineering},
    month =   {November--December},
    year =    {2006},
    note =    {Summarizes the what and why of Version 3 of the course.},
    doi =     {10.1109/mcse.2006.122}
}

